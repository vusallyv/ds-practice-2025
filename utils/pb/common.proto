syntax = "proto3";

package common;

service TransactionService {
    rpc Prepare (common.PrepareRequest) returns (common.PrepareResponse);
    rpc Commit (common.CommitRequest) returns (common.CommitResponse);
    rpc Abort (common.AbortRequest) returns (common.AbortResponse);
}

message PrepareRequest {
    string order_id = 1;
    int32 amount = 2;
    string title = 3;
}

message PrepareResponse {
    bool ready = 1;
}

message CommitRequest {
    string order_id = 1;
    string title = 2;
}

message CommitResponse {
    bool success = 1;
}

message AbortRequest {
    string order_id = 1;
}

message AbortResponse {
    bool aborted = 1;
}

message VectorClock {
    repeated uint32 clocks = 1;
}

message Request {
    string order_id = 1;
    VectorClock vector_clock = 2;
}

message Response {
    bool fail = 1;
    string message = 2;
    VectorClock vector_clock = 3;
}

message Item {
    string name = 1;
    int32 quantity = 2;
}

message InitAllInfoRequest{
    string order_id = 1;
    AllInfoRequest request = 2;
}

message AllInfoRequest {
    string name = 1; 
    string contact = 2;
    string credit_card_number = 3;
    string expiration_date = 4;
    int32 cvv = 5;
    string billing_address = 6;
    int32 quantity = 7;
    repeated common.Item items = 8;
}

message ItemsInitRequest {
    string order_id = 1;
    repeated Item items = 2;
}

message Empty {}
